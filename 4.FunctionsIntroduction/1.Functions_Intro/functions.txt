Original functions.py file before comments were removed and docstrings
were added.


# Challenge create a docstring for the three functions in this file

def multiply(x, y):
    """
    Multiply 2 numbers.

    Although this function is intended to multiply 2 numbers, you can
    also use it to multiply a sequence.  If you pass a string, for
    example, as the first argument, you'll get the string repeated `y`
    times as the returned value.

    :param x: The first number to multiply.
    :param y: The number to multiply `x` by.
    :return: The product of `x` and `y`.
    """
    result = x * y
    return result
#
#
# answer = multiply(10.5, 4)
# print(answer)
#
# print("*" * 5)
#
# forty_two = multiply(6, 7)
# print(forty_two)
#
# print("*" * 5)
#
# for val in range(1, 6):  # loops through the numbers 1 - 6 and stores
# them in
# val on each iteration
#     two_times = multiply(2, val)  # sets the value of two_times to the
#     value of multiplying 2 *
#     the current value of val
#     print(two_times)  # prints out the result
#
# print("*" * 5)


# def is_palindrome(string):
#     backwards = string[::-1] # slice reverses the string
#     return backwards == string


def is_palindrome(string):
    """
    Check if a string is a palindrome.

    A palindrome is a string that reads the same forwards as backwards.

    :param string:The string to check.
    :return:True if `sting` is palindrome, False otherwise.
    """
    return string[::-1].casefold() == string.casefold()


def palindrome_sentence(sentence):
    """
    Check if a sentence is a palindrome.

    The function ignores whitespace, capitalisation and punctuation in
    the sentence.


    :param sentence: The sentence to check.
    :return: True if `sentence` is a palindrome, False otherwise.
    """
    string = ""
    for char in sentence:
        if char.isalnum():
            string += char
    #  print(string)
    #   return string[::-1].casefold() == string.casefold()
    return is_palindrome(string)


# word = input("Please enter a word to check: ")

# if palindrome_sentence(word):
#     print("'{}' is a palindrome".format(word))
# else:
#     print("'{}' is not a palindrome".format(word))

answer = multiply(18, 3)
print(answer)